{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","onFilterSelect","activeClass","filter","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","console","log","items","length","indexOf","visiblePosts","filterPosts","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fa26ac8.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\nexport default AppHeader;","import React from 'react';\r\n\r\nconst AppHeader = ({liked, allPosts}) =>{\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Repenko Mykyta</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nexport default class SearchPanel extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        };\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(e){\r\n        const term = e.target.value;\r\n        this.setState({\r\n            term: term\r\n        });\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render(){\r\n        return( \r\n            <input\r\n                className = \"form-control search-input\"\r\n                type = \"text\"\r\n                placeholder = \"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n","import PostStatusFilter from \"./post-status-filter\";\r\nexport default PostStatusFilter;","import React, { Component } from 'react';\r\n\r\nexport default class PostStatusFilter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n    render(){\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const {onFilterSelect, filter} = this.props;\r\n            const active = filter === name;\r\n            const activeClass = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return(\r\n                <button\r\n                    key={name}\r\n                    type=\"button\"\r\n                    className={`btn ${activeClass}`}\r\n                    onClick={()=> onFilterSelect(name)}\r\n                    >\r\n                    {label}\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostStatusFilter from \"../post-status-filter\";\r\nimport PostListItem from \"./post-list-item\";\r\nexport default PostListItem;","import React, {Component} from 'react';\r\n\r\n\r\nexport default class PostListItem extends Component {\r\n    \r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, important, like} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n        if(important){\r\n            classNames += ' important'\r\n        }\r\n\r\n        if(like){\r\n            classNames += ' like'\r\n        }\r\n\r\n        return(\r\n            <div className = {classNames}>\r\n                <span className=\"app-list-label\" onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button className=\"btn-star btn-sm\" type=\"button\" onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button className=\"btn-trash btn-sm\" type=\"button\" onClick={onDelete}>\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import PostList from \"./post-list\";\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) =>{\r\n\r\n    const elements = posts.map((item => {\r\n        const {id} = item;\r\n        return(\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem\r\n                label={item.label}\r\n                important={item.important}\r\n                onDelete={() => onDelete(id)}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    }));\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from \"./post-add-form\";\r\nexport default PostAddForm;","import React, { Component } from 'react';\r\n\r\nexport default class  PostAddForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e){\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form\r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type = \"text\"\r\n                    placeholder = \"О чем вы думаете сейчас?\"\r\n                    className= \"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}           \r\n                />\r\n                <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n                    Добавить \r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import App from './app'\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport '../../index.css';\r\nimport './app.css';\r\nimport '../app-header/app-header.css';\r\nimport '../post-add-form/post-add-form.css';\r\nimport '../post-list/post-list.css';\r\nimport '../post-list-item/post-list-item.css';\r\nimport '../post-status-filter/post-status-filter.css';\r\nimport '../search-panel/search-panel.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: 'Going to learn React', important: true, like: false, id: 1},\r\n                {label: 'Some Post', important: false, like: false, id:2},\r\n                {label: 'Another Post', important: false, like: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n\r\n        this.maxId = 4;\r\n    }\r\n    deleteItem(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n\r\n            return{\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body){\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n    onToggleLiked(id){\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n            console.log(newItem.like);\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchPost(items, term){\r\n        if (term.length === 0){\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPosts(items, filter){\r\n        if(filter === 'like'){\r\n            return items.filter(item => item.like)\r\n        }else{\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term){\r\n        this.setState({\r\n            term: term\r\n        })\r\n    }\r\n\r\n    onFilterSelect(filter){\r\n        this.setState({\r\n            filter: filter\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts =this.filterPosts(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}/>\r\n                <div className = \"d-flex search-panel\">\r\n                    <SearchPanel\r\n                    onUpdateSearch={this.onUpdateSearch}\r\n                    />\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}\r\n                    />\r\n                </div>\r\n                <PostList\r\n                    posts = {visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm onAdd={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}